// Code generated by protoc-gen-go. DO NOT EDIT.
// source: NodeServerProtocol.proto

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	NodeServerProtocol.proto

It has these top-level messages:
	AppServerInfo
	NodeMkNewAppReqPkg
	NodeMkNewAppRspPkg
	NodeStartReqPkg
	NodeStartRspPkgs
	NodeStopReqPkg
	NodeStopRspPkgs
	Node2CenterHeartBeatReqPkg
	Server2NodeHeartBeatReqPkg
	NodeServerPkg
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeCmd int32

const (
	NodeCmd_NODE_CMD_MKNEW_APP                   NodeCmd = 1001
	NodeCmd_NODE_CMD_MKNEW_APP_RSP               NodeCmd = 1002
	NodeCmd_NODE_CMD_START                       NodeCmd = 1003
	NodeCmd_NODE_CMD_START_RSP                   NodeCmd = 1004
	NodeCmd_NODE_CMD_STOP                        NodeCmd = 1005
	NodeCmd_NODE_CMD_STOP_RSP                    NodeCmd = 1006
	NodeCmd_NODE_CMD_RESTART                     NodeCmd = 1007
	NodeCmd_NODE_CMD_RESTART_RSP                 NodeCmd = 1008
	NodeCmd_NODE_CMD_PUSH_FILE                   NodeCmd = 1009
	NodeCmd_NODE_CMD_PUSH_FILE_RSP               NodeCmd = 1010
	NodeCmd_NODE_CMD_SHELL                       NodeCmd = 1011
	NodeCmd_NODE_CMD_SHELL_RSP                   NodeCmd = 1012
	NodeCmd_NODE_CMD_PUB_PKG                     NodeCmd = 1013
	NodeCmd_NODE_CMD_PUB_PKG_RSP                 NodeCmd = 1014
	NodeCmd_NODE_CMD_NODE2CENTER_HEARTBEAT       NodeCmd = 1015
	NodeCmd_NODE_CMD_NODE2CENTER_HEARTBEAT_RSP   NodeCmd = 1016
	NodeCmd_NODE_CMD_SERVER2CENTER_HEARTBEAT     NodeCmd = 1017
	NodeCmd_NODE_CMD_SERVER2CENTER_HEARTBEAT_RSP NodeCmd = 1018
	NodeCmd_NODE_CMD_SERVER2NODE_HEARTBEAT       NodeCmd = 1019
	NodeCmd_NODE_CMD_SERVER2NODE_HEARTBEAT_RSP   NodeCmd = 1020
)

var NodeCmd_name = map[int32]string{
	1001: "NODE_CMD_MKNEW_APP",
	1002: "NODE_CMD_MKNEW_APP_RSP",
	1003: "NODE_CMD_START",
	1004: "NODE_CMD_START_RSP",
	1005: "NODE_CMD_STOP",
	1006: "NODE_CMD_STOP_RSP",
	1007: "NODE_CMD_RESTART",
	1008: "NODE_CMD_RESTART_RSP",
	1009: "NODE_CMD_PUSH_FILE",
	1010: "NODE_CMD_PUSH_FILE_RSP",
	1011: "NODE_CMD_SHELL",
	1012: "NODE_CMD_SHELL_RSP",
	1013: "NODE_CMD_PUB_PKG",
	1014: "NODE_CMD_PUB_PKG_RSP",
	1015: "NODE_CMD_NODE2CENTER_HEARTBEAT",
	1016: "NODE_CMD_NODE2CENTER_HEARTBEAT_RSP",
	1017: "NODE_CMD_SERVER2CENTER_HEARTBEAT",
	1018: "NODE_CMD_SERVER2CENTER_HEARTBEAT_RSP",
	1019: "NODE_CMD_SERVER2NODE_HEARTBEAT",
	1020: "NODE_CMD_SERVER2NODE_HEARTBEAT_RSP",
}
var NodeCmd_value = map[string]int32{
	"NODE_CMD_MKNEW_APP":                   1001,
	"NODE_CMD_MKNEW_APP_RSP":               1002,
	"NODE_CMD_START":                       1003,
	"NODE_CMD_START_RSP":                   1004,
	"NODE_CMD_STOP":                        1005,
	"NODE_CMD_STOP_RSP":                    1006,
	"NODE_CMD_RESTART":                     1007,
	"NODE_CMD_RESTART_RSP":                 1008,
	"NODE_CMD_PUSH_FILE":                   1009,
	"NODE_CMD_PUSH_FILE_RSP":               1010,
	"NODE_CMD_SHELL":                       1011,
	"NODE_CMD_SHELL_RSP":                   1012,
	"NODE_CMD_PUB_PKG":                     1013,
	"NODE_CMD_PUB_PKG_RSP":                 1014,
	"NODE_CMD_NODE2CENTER_HEARTBEAT":       1015,
	"NODE_CMD_NODE2CENTER_HEARTBEAT_RSP":   1016,
	"NODE_CMD_SERVER2CENTER_HEARTBEAT":     1017,
	"NODE_CMD_SERVER2CENTER_HEARTBEAT_RSP": 1018,
	"NODE_CMD_SERVER2NODE_HEARTBEAT":       1019,
	"NODE_CMD_SERVER2NODE_HEARTBEAT_RSP":   1020,
}

func (x NodeCmd) Enum() *NodeCmd {
	p := new(NodeCmd)
	*p = x
	return p
}
func (x NodeCmd) String() string {
	return proto.EnumName(NodeCmd_name, int32(x))
}
func (x *NodeCmd) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NodeCmd_value, data, "NodeCmd")
	if err != nil {
		return err
	}
	*x = NodeCmd(value)
	return nil
}
func (NodeCmd) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ServerStatus int32

const (
	ServerStatus_SERVER_STATUS_MKNEW         ServerStatus = 3001
	ServerStatus_SERVER_STATUS_RUNNING       ServerStatus = 3002
	ServerStatus_SERVER_STATUS_MANUAL_STOPED ServerStatus = 3003
	ServerStatus_SERVER_STATUS_STOPED        ServerStatus = 3004
	ServerStatus_SERVER_STATUS_OFFLINE       ServerStatus = 3005
)

var ServerStatus_name = map[int32]string{
	3001: "SERVER_STATUS_MKNEW",
	3002: "SERVER_STATUS_RUNNING",
	3003: "SERVER_STATUS_MANUAL_STOPED",
	3004: "SERVER_STATUS_STOPED",
	3005: "SERVER_STATUS_OFFLINE",
}
var ServerStatus_value = map[string]int32{
	"SERVER_STATUS_MKNEW":         3001,
	"SERVER_STATUS_RUNNING":       3002,
	"SERVER_STATUS_MANUAL_STOPED": 3003,
	"SERVER_STATUS_STOPED":        3004,
	"SERVER_STATUS_OFFLINE":       3005,
}

func (x ServerStatus) Enum() *ServerStatus {
	p := new(ServerStatus)
	*p = x
	return p
}
func (x ServerStatus) String() string {
	return proto.EnumName(ServerStatus_name, int32(x))
}
func (x *ServerStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServerStatus_value, data, "ServerStatus")
	if err != nil {
		return err
	}
	*x = ServerStatus(value)
	return nil
}
func (ServerStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type AppServerInfo struct {
	Port             *int32  `protobuf:"varint,1,req,name=port" json:"port,omitempty"`
	StrServerName    *string `protobuf:"bytes,2,req,name=strServerName" json:"strServerName,omitempty"`
	StrInstId        *string `protobuf:"bytes,3,req,name=strInstId" json:"strInstId,omitempty"`
	Path             *string `protobuf:"bytes,4,req,name=path" json:"path,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AppServerInfo) Reset()                    { *m = AppServerInfo{} }
func (m *AppServerInfo) String() string            { return proto.CompactTextString(m) }
func (*AppServerInfo) ProtoMessage()               {}
func (*AppServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AppServerInfo) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *AppServerInfo) GetStrServerName() string {
	if m != nil && m.StrServerName != nil {
		return *m.StrServerName
	}
	return ""
}

func (m *AppServerInfo) GetStrInstId() string {
	if m != nil && m.StrInstId != nil {
		return *m.StrInstId
	}
	return ""
}

func (m *AppServerInfo) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

type NodeMkNewAppReqPkg struct {
	Path             *string        `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	CenterUrl        *string        `protobuf:"bytes,2,req,name=centerUrl" json:"centerUrl,omitempty"`
	AppInfo          *AppServerInfo `protobuf:"bytes,3,req,name=appInfo" json:"appInfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *NodeMkNewAppReqPkg) Reset()                    { *m = NodeMkNewAppReqPkg{} }
func (m *NodeMkNewAppReqPkg) String() string            { return proto.CompactTextString(m) }
func (*NodeMkNewAppReqPkg) ProtoMessage()               {}
func (*NodeMkNewAppReqPkg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NodeMkNewAppReqPkg) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *NodeMkNewAppReqPkg) GetCenterUrl() string {
	if m != nil && m.CenterUrl != nil {
		return *m.CenterUrl
	}
	return ""
}

func (m *NodeMkNewAppReqPkg) GetAppInfo() *AppServerInfo {
	if m != nil {
		return m.AppInfo
	}
	return nil
}

type NodeMkNewAppRspPkg struct {
	Ret              *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NodeMkNewAppRspPkg) Reset()                    { *m = NodeMkNewAppRspPkg{} }
func (m *NodeMkNewAppRspPkg) String() string            { return proto.CompactTextString(m) }
func (*NodeMkNewAppRspPkg) ProtoMessage()               {}
func (*NodeMkNewAppRspPkg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NodeMkNewAppRspPkg) GetRet() int32 {
	if m != nil && m.Ret != nil {
		return *m.Ret
	}
	return 0
}

type NodeStartReqPkg struct {
	Path             *string        `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	AppInfo          *AppServerInfo `protobuf:"bytes,2,req,name=appInfo" json:"appInfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *NodeStartReqPkg) Reset()                    { *m = NodeStartReqPkg{} }
func (m *NodeStartReqPkg) String() string            { return proto.CompactTextString(m) }
func (*NodeStartReqPkg) ProtoMessage()               {}
func (*NodeStartReqPkg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *NodeStartReqPkg) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *NodeStartReqPkg) GetAppInfo() *AppServerInfo {
	if m != nil {
		return m.AppInfo
	}
	return nil
}

type NodeStartRspPkgs struct {
	Ret              *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NodeStartRspPkgs) Reset()                    { *m = NodeStartRspPkgs{} }
func (m *NodeStartRspPkgs) String() string            { return proto.CompactTextString(m) }
func (*NodeStartRspPkgs) ProtoMessage()               {}
func (*NodeStartRspPkgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *NodeStartRspPkgs) GetRet() int32 {
	if m != nil && m.Ret != nil {
		return *m.Ret
	}
	return 0
}

type NodeStopReqPkg struct {
	Path             *string        `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	AppInfo          *AppServerInfo `protobuf:"bytes,2,req,name=appInfo" json:"appInfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *NodeStopReqPkg) Reset()                    { *m = NodeStopReqPkg{} }
func (m *NodeStopReqPkg) String() string            { return proto.CompactTextString(m) }
func (*NodeStopReqPkg) ProtoMessage()               {}
func (*NodeStopReqPkg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *NodeStopReqPkg) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *NodeStopReqPkg) GetAppInfo() *AppServerInfo {
	if m != nil {
		return m.AppInfo
	}
	return nil
}

type NodeStopRspPkgs struct {
	Ret              *int32 `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NodeStopRspPkgs) Reset()                    { *m = NodeStopRspPkgs{} }
func (m *NodeStopRspPkgs) String() string            { return proto.CompactTextString(m) }
func (*NodeStopRspPkgs) ProtoMessage()               {}
func (*NodeStopRspPkgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *NodeStopRspPkgs) GetRet() int32 {
	if m != nil && m.Ret != nil {
		return *m.Ret
	}
	return 0
}

// 节点到中心的心跳包，有可能携带APP信息
type Node2CenterHeartBeatReqPkg struct {
	StrInnerip       *string        `protobuf:"bytes,1,req,name=strInnerip" json:"strInnerip,omitempty"`
	StrOther         *string        `protobuf:"bytes,2,req,name=strOther" json:"strOther,omitempty"`
	AppInfo          *AppServerInfo `protobuf:"bytes,3,opt,name=appInfo" json:"appInfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Node2CenterHeartBeatReqPkg) Reset()                    { *m = Node2CenterHeartBeatReqPkg{} }
func (m *Node2CenterHeartBeatReqPkg) String() string            { return proto.CompactTextString(m) }
func (*Node2CenterHeartBeatReqPkg) ProtoMessage()               {}
func (*Node2CenterHeartBeatReqPkg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Node2CenterHeartBeatReqPkg) GetStrInnerip() string {
	if m != nil && m.StrInnerip != nil {
		return *m.StrInnerip
	}
	return ""
}

func (m *Node2CenterHeartBeatReqPkg) GetStrOther() string {
	if m != nil && m.StrOther != nil {
		return *m.StrOther
	}
	return ""
}

func (m *Node2CenterHeartBeatReqPkg) GetAppInfo() *AppServerInfo {
	if m != nil {
		return m.AppInfo
	}
	return nil
}

type Server2NodeHeartBeatReqPkg struct {
	StrInnerip       *string        `protobuf:"bytes,1,req,name=strInnerip" json:"strInnerip,omitempty"`
	AppInfo          *AppServerInfo `protobuf:"bytes,2,req,name=appInfo" json:"appInfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Server2NodeHeartBeatReqPkg) Reset()                    { *m = Server2NodeHeartBeatReqPkg{} }
func (m *Server2NodeHeartBeatReqPkg) String() string            { return proto.CompactTextString(m) }
func (*Server2NodeHeartBeatReqPkg) ProtoMessage()               {}
func (*Server2NodeHeartBeatReqPkg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Server2NodeHeartBeatReqPkg) GetStrInnerip() string {
	if m != nil && m.StrInnerip != nil {
		return *m.StrInnerip
	}
	return ""
}

func (m *Server2NodeHeartBeatReqPkg) GetAppInfo() *AppServerInfo {
	if m != nil {
		return m.AppInfo
	}
	return nil
}

type NodeServerPkg struct {
	Cmd              *int32  `protobuf:"varint,1,req,name=cmd" json:"cmd,omitempty"`
	Seq              *uint64 `protobuf:"varint,2,req,name=seq" json:"seq,omitempty"`
	Data             []byte  `protobuf:"bytes,3,req,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NodeServerPkg) Reset()                    { *m = NodeServerPkg{} }
func (m *NodeServerPkg) String() string            { return proto.CompactTextString(m) }
func (*NodeServerPkg) ProtoMessage()               {}
func (*NodeServerPkg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *NodeServerPkg) GetCmd() int32 {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return 0
}

func (m *NodeServerPkg) GetSeq() uint64 {
	if m != nil && m.Seq != nil {
		return *m.Seq
	}
	return 0
}

func (m *NodeServerPkg) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*AppServerInfo)(nil), "protocol.AppServerInfo")
	proto.RegisterType((*NodeMkNewAppReqPkg)(nil), "protocol.NodeMkNewAppReqPkg")
	proto.RegisterType((*NodeMkNewAppRspPkg)(nil), "protocol.NodeMkNewAppRspPkg")
	proto.RegisterType((*NodeStartReqPkg)(nil), "protocol.NodeStartReqPkg")
	proto.RegisterType((*NodeStartRspPkgs)(nil), "protocol.NodeStartRspPkgs")
	proto.RegisterType((*NodeStopReqPkg)(nil), "protocol.NodeStopReqPkg")
	proto.RegisterType((*NodeStopRspPkgs)(nil), "protocol.NodeStopRspPkgs")
	proto.RegisterType((*Node2CenterHeartBeatReqPkg)(nil), "protocol.Node2CenterHeartBeatReqPkg")
	proto.RegisterType((*Server2NodeHeartBeatReqPkg)(nil), "protocol.Server2NodeHeartBeatReqPkg")
	proto.RegisterType((*NodeServerPkg)(nil), "protocol.NodeServerPkg")
	proto.RegisterEnum("protocol.NodeCmd", NodeCmd_name, NodeCmd_value)
	proto.RegisterEnum("protocol.ServerStatus", ServerStatus_name, ServerStatus_value)
}

func init() { proto.RegisterFile("NodeServerProtocol.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 628 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0x4b, 0x4f, 0xdb, 0x4c,
	0x14, 0x55, 0x42, 0x3e, 0x0d, 0x5c, 0x08, 0xdf, 0x30, 0x14, 0x92, 0x82, 0x44, 0xd3, 0xb4, 0x55,
	0x29, 0x0b, 0x16, 0xd9, 0x74, 0x6d, 0xc2, 0x40, 0x2c, 0x82, 0x63, 0xf9, 0xd1, 0x4a, 0xdd, 0x58,
	0x16, 0x99, 0x96, 0x0a, 0x88, 0x87, 0xf1, 0xb4, 0xfd, 0x35, 0xfd, 0x21, 0x7d, 0xfd, 0x86, 0xfe,
	0x8e, 0xbe, 0xdf, 0xef, 0x2e, 0xaa, 0x19, 0x3b, 0x81, 0x09, 0x11, 0x45, 0xea, 0xce, 0x73, 0xcf,
	0xb9, 0xe7, 0x9c, 0x7b, 0x7d, 0xa1, 0xea, 0x24, 0x5d, 0xe6, 0x33, 0x71, 0x9f, 0x09, 0x57, 0x24,
	0x32, 0xd9, 0x49, 0xf6, 0x57, 0xb9, 0xfa, 0x20, 0xe3, 0x3c, 0x7f, 0xd7, 0x43, 0x28, 0x5b, 0x9c,
	0x67, 0x24, 0xbb, 0x77, 0x3b, 0x21, 0x53, 0x50, 0xe2, 0x89, 0x90, 0xd5, 0x42, 0xad, 0xb8, 0xfc,
	0x1f, 0x99, 0x83, 0x72, 0x2a, 0x45, 0x06, 0x3b, 0xf1, 0x01, 0xab, 0x16, 0x6b, 0xc5, 0xe5, 0x09,
	0x32, 0x03, 0x13, 0xa9, 0x14, 0x76, 0x2f, 0x95, 0x76, 0xb7, 0x3a, 0xa6, 0x4b, 0xaa, 0x2f, 0x96,
	0xbb, 0xd5, 0x92, 0x7a, 0xd5, 0x23, 0x20, 0xca, 0x7c, 0x7b, 0xcf, 0x61, 0x0f, 0x2c, 0xce, 0x3d,
	0x76, 0xe8, 0xee, 0xdd, 0x19, 0x70, 0x0a, 0x7d, 0x91, 0x1d, 0xd6, 0x93, 0x4c, 0x84, 0x62, 0x3f,
	0xd7, 0x5d, 0x06, 0x14, 0x73, 0xae, 0x72, 0x68, 0xd5, 0xc9, 0x46, 0x65, 0xb5, 0x9f, 0x74, 0xd5,
	0x88, 0x59, 0xbf, 0x38, 0x64, 0x90, 0x72, 0x65, 0x30, 0x09, 0x63, 0x82, 0xe5, 0xd9, 0xeb, 0x36,
	0xfc, 0xaf, 0x17, 0x20, 0x63, 0x21, 0x47, 0x06, 0x38, 0xe6, 0x56, 0x3c, 0xdd, 0xed, 0x02, 0xe0,
	0x23, 0x29, 0x6d, 0x95, 0x9a, 0x5e, 0x2d, 0x98, 0xce, 0x08, 0x09, 0xff, 0x47, 0xab, 0xa5, 0x7e,
	0xea, 0x84, 0x8f, 0x74, 0xda, 0x87, 0x05, 0x85, 0x37, 0x9a, 0x7a, 0x75, 0x2d, 0x16, 0x0b, 0xb9,
	0xc6, 0xe2, 0xfe, 0x80, 0x04, 0x40, 0xff, 0x98, 0x1e, 0x13, 0x77, 0x79, 0xee, 0x8d, 0x61, 0x3c,
	0x95, 0xa2, 0x23, 0x77, 0x99, 0x18, 0xb5, 0xe6, 0xc2, 0x69, 0x69, 0x6e, 0xc1, 0x42, 0xf6, 0x6a,
	0x28, 0xd3, 0xb3, 0xb8, 0x9d, 0x7d, 0xd2, 0xeb, 0x50, 0x3e, 0x76, 0xa0, 0xd9, 0xdf, 0xdb, 0x39,
	0xe8, 0xe6, 0x97, 0x37, 0x09, 0x63, 0x29, 0x3b, 0xd4, 0x1a, 0x25, 0xb5, 0xcc, 0x6e, 0x2c, 0x63,
	0x7d, 0x14, 0x53, 0x2b, 0xcf, 0x4b, 0x80, 0x54, 0x67, 0xf3, 0xa0, 0x4b, 0x2a, 0x40, 0x9c, 0xce,
	0x3a, 0x8d, 0x9a, 0xdb, 0xeb, 0xd1, 0xf6, 0x96, 0x43, 0x6f, 0x46, 0x96, 0xeb, 0xe2, 0x17, 0x88,
	0x2c, 0xc2, 0xfc, 0x49, 0x20, 0xf2, 0x7c, 0x17, 0xbf, 0x44, 0x64, 0x16, 0xa6, 0x07, 0xa0, 0x1f,
	0x58, 0x5e, 0x80, 0x5f, 0x21, 0x43, 0x4a, 0x17, 0x35, 0xfb, 0x35, 0x22, 0x04, 0xca, 0xc7, 0x80,
	0x8e, 0x8b, 0xdf, 0x20, 0x32, 0x0f, 0x33, 0x46, 0x4d, 0x73, 0xdf, 0x22, 0x32, 0x07, 0x78, 0x50,
	0xf7, 0x68, 0xa6, 0xfd, 0x0e, 0x91, 0xf3, 0x70, 0x6e, 0xb8, 0xac, 0x3b, 0xde, 0x9b, 0xb6, 0x6e,
	0xe8, 0xb7, 0xa2, 0x0d, 0xbb, 0x4d, 0xf1, 0x07, 0x73, 0x82, 0x01, 0xa0, 0xbb, 0x3e, 0x0e, 0x4d,
	0xd0, 0xa2, 0xed, 0x36, 0xfe, 0x34, 0x34, 0x81, 0x2a, 0x6a, 0xf6, 0x67, 0x33, 0x95, 0x1b, 0xae,
	0x45, 0xee, 0xd6, 0x26, 0xfe, 0x62, 0xa6, 0xca, 0xcb, 0xba, 0xe3, 0x2b, 0x22, 0x97, 0x60, 0x69,
	0x00, 0xa9, 0x8f, 0x46, 0x93, 0x3a, 0x01, 0xf5, 0xa2, 0x16, 0xb5, 0xbc, 0x60, 0x8d, 0x5a, 0x01,
	0xfe, 0x86, 0xc8, 0x55, 0xa8, 0x9f, 0x4e, 0xd2, 0x6a, 0xdf, 0x11, 0xb9, 0x02, 0xb5, 0xa3, 0x60,
	0xd4, 0xbb, 0x41, 0xbd, 0x93, 0x7a, 0x3f, 0x10, 0xb9, 0x06, 0x97, 0xff, 0x46, 0xd3, 0x8a, 0x3f,
	0xcd, 0x7c, 0x39, 0x55, 0xbf, 0x8f, 0xf4, 0x7e, 0x99, 0xf9, 0x46, 0x92, 0xb4, 0xda, 0x6f, 0xb4,
	0xf2, 0xb0, 0x00, 0x53, 0xd9, 0x1d, 0xfa, 0x32, 0x96, 0xf7, 0x52, 0x52, 0x85, 0xd9, 0xac, 0x41,
	0x5d, 0x42, 0x10, 0xfa, 0xd9, 0x09, 0xe1, 0x47, 0x15, 0xb2, 0x00, 0x73, 0x26, 0xe2, 0x85, 0x8e,
	0x63, 0x3b, 0x9b, 0xf8, 0x71, 0x85, 0xd4, 0x60, 0x71, 0xa8, 0xcb, 0x72, 0x42, 0xab, 0xad, 0x0f,
	0x84, 0xae, 0xe3, 0x27, 0x15, 0xb5, 0x71, 0x93, 0x91, 0x43, 0x4f, 0x47, 0x08, 0x77, 0x36, 0x36,
	0xda, 0xb6, 0x43, 0xf1, 0xb3, 0xca, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x20, 0x45, 0x7a, 0x55,
	0xca, 0x05, 0x00, 0x00,
}
